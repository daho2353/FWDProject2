{"ast":null,"code":"import _slicedToArray from \"/Users/daho/Documents/GitHub/FWDProject2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/daho/Documents/GitHub/FWDProject2/src/App.js\";\nimport React from 'react';\nimport Card from './Card';\nimport Timer from './Timer';\nimport './App.css';\nimport { useState } from 'react';\nimport _ from 'lodash';\nconst possibleCards = [{\n  color: 'red',\n  flipped: false,\n  matched: false\n}, {\n  color: 'red',\n  flipped: false,\n  matched: false\n}, {\n  color: 'yellow',\n  flipped: false,\n  matched: false\n}, {\n  color: 'yellow',\n  flipped: false,\n  matched: false\n}, {\n  color: 'blue',\n  flipped: false,\n  matched: false\n}, {\n  color: 'blue',\n  flipped: false,\n  matched: false\n}, {\n  color: 'green',\n  flipped: false,\n  matched: false\n}, {\n  color: 'green',\n  flipped: false,\n  matched: false\n}, {\n  color: 'orange',\n  flipped: false,\n  matched: false\n}, {\n  color: 'orange',\n  flipped: false,\n  matched: false\n}];\n\nfunction resetBoard() {\n  return _.cloneDeep(_.shuffle(possibleCards)); //clones the object so original remains in tact\n}\n\nfunction flipCard(cardId, cards, setCards, timerOn, setTimerOn) {\n  var i;\n\n  if (timerOn === false) {\n    setTimerOn(true);\n  }\n\n  for (i = possibleCards.length - 1; i > 0; i--) //for cards in the array\n  {\n    if (!cards[i].flipped && !cards[i].matched) //if no card is flipped\n      {\n        cards[cardId].flipped = true; //flip first card\n\n        setCards(cards); //setState\n      } else if (cards[i].flipped && !cards[i].matched) //if flip card is found\n      {\n        console.log(\"this step\");\n        cards[cardId].flipped = true; //flip second card\n\n        if (cards[cardId].color === cards[i].color) //if they have the same color set match to true\n          {\n            cards[cardId].matched = true;\n            cards[i].matched = true;\n            setCards(cards);\n          } else //wait then set match to false\n          {\n            setCards(cards);\n            setTimeout(() => {\n              cards[cardId].flipped = false;\n              cards[i].flipped = false;\n              setCards(cards);\n            }, 1000);\n          }\n      }\n  }\n}\n\nfunction App() {\n  const _useState = useState(resetBoard()),\n        _useState2 = _slicedToArray(_useState, 2),\n        cards = _useState2[0],\n        setCards = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        victory = _useState4[0],\n        setVictory = _useState4[1]; //0 no victory, 1 victory\n\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        timerOn = _useState6[0],\n        setTimerOn = _useState6[1]; //0 timer off, 1 timer on\n\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Timer, {\n    props: timerOn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Card, {\n    card: cards[0],\n    onClick: () => flipCard(0, cards, setCards, timerOn, setTimerOn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[1],\n    onClick: () => flipCard(1, cards, setCards, timerOn, setTimerOn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[2],\n    onClick: () => flipCard(2, cards, setCards, timerOn, setTimerOn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[3],\n    onClick: () => flipCard(3, cards, setCards, timerOn, setTimerOn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[4],\n    onClick: () => flipCard(4, cards, setCards, timerOn, setTimerOn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Card, {\n    card: cards[5],\n    onClick: () => flipCard(5, cards, setCards, timerOn, setTimerOn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[6],\n    onClick: () => flipCard(6, cards, setCards, timerOn, setTimerOn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[7],\n    onClick: () => flipCard(7, cards, setCards, timerOn, setTimerOn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[8],\n    onClick: () => flipCard(8, cards, setCards, timerOn, setTimerOn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[9],\n    onClick: () => flipCard(9, cards, setCards, timerOn, setTimerOn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    onClick: () => setCards(resetBoard()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \" Reset \"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/daho/Documents/GitHub/FWDProject2/src/App.js"],"names":["React","Card","Timer","useState","_","possibleCards","color","flipped","matched","resetBoard","cloneDeep","shuffle","flipCard","cardId","cards","setCards","timerOn","setTimerOn","i","length","console","log","setTimeout","App","victory","setVictory"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from './Card';\nimport Timer from'./Timer';\nimport './App.css';\nimport { useState } from 'react';\nimport _ from 'lodash';\n\nconst possibleCards = \n[\n  { color : 'red', flipped: false, matched:false},\n  { color : 'red', flipped: false, matched:false},\n  { color : 'yellow', flipped: false, matched:false },\n  { color : 'yellow', flipped: false, matched:false },\n  { color : 'blue', flipped: false, matched:false },\n  { color : 'blue', flipped: false, matched:false },\n  { color : 'green', flipped: false, matched:false },\n  { color : 'green', flipped: false, matched:false },\n  { color : 'orange', flipped: false, matched:false },\n  { color : 'orange', flipped: false, matched:false }\n]\n\nfunction resetBoard()\n{\n  return _.cloneDeep(_.shuffle(possibleCards)); //clones the object so original remains in tact\n}\n\nfunction flipCard(cardId, cards, setCards, timerOn, setTimerOn)\n{\n  var i;\n  if(timerOn === false)\n  {\n    setTimerOn(true);\n  }\n  for(i = possibleCards.length - 1 ; i > 0; i--) //for cards in the array\n  {\n    if(!cards[i].flipped && !cards[i].matched) //if no card is flipped\n    {\n      cards[cardId].flipped = true; //flip first card\n      setCards(cards); //setState\n    }\n    else if(cards[i].flipped && !cards[i].matched) //if flip card is found\n    {\n      console.log(\"this step\");\n      cards[cardId].flipped = true; //flip second card\n      if(cards[cardId].color === cards[i].color) //if they have the same color set match to true\n      {\n        cards[cardId].matched = true; \n        cards[i].matched = true;\n        setCards(cards);\n      }\n      else //wait then set match to false\n      {\n        setCards(cards);\n        setTimeout(() => {\n          cards[cardId].flipped = false;\n          cards[i].flipped = false;\n          setCards(cards);\n        }, 1000);\n      }\n    }\n  }\n}\n\nfunction App() {\n  const[cards, setCards] = useState(resetBoard()); \n  const[victory, setVictory] = useState(false); //0 no victory, 1 victory\n  const[timerOn, setTimerOn] = useState(false); //0 timer off, 1 timer on\n  return (\n    <div className=\"App\">\n      <Timer props = {timerOn}/> \n      <table>\n        <tr>\n          <Card card = {cards[0]} onClick={() => flipCard(0, cards, setCards, timerOn, setTimerOn)}/> \n          <Card card = {cards[1]} onClick={() => flipCard(1, cards, setCards, timerOn, setTimerOn)}/>\n          <Card card = {cards[2]} onClick={() => flipCard(2, cards, setCards, timerOn, setTimerOn)}/>\n          <Card card = {cards[3]} onClick={() => flipCard(3, cards, setCards, timerOn, setTimerOn)}/>\n          <Card card = {cards[4]} onClick={() => flipCard(4, cards, setCards, timerOn, setTimerOn)}/>\n        </tr>\n        <tr>\n          <Card card = {cards[5]} onClick={() => flipCard(5, cards, setCards, timerOn, setTimerOn)}/>\n          <Card card = {cards[6]} onClick={() => flipCard(6, cards, setCards, timerOn, setTimerOn)}/>\n          <Card card = {cards[7]} onClick={() => flipCard(7, cards, setCards, timerOn, setTimerOn)}/>\n          <Card card = {cards[8]} onClick={() => flipCard(8, cards, setCards, timerOn, setTimerOn)}/>\n          <Card card = {cards[9]} onClick={() => flipCard(9, cards, setCards, timerOn, setTimerOn)}/> \n        </tr>\n      </table>\n      <button onClick={() => setCards(resetBoard())}> Reset </button> \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}