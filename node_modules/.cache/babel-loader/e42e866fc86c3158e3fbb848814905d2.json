{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferna\\\\Documents\\\\GitHub\\\\FWDProject2\\\\src\\\\Card.js\";\nimport React, { Component } from 'react';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardColor: \"black\"\n    };\n    this.cardState = this.cardState.bind(this);\n  }\n\n  cardState() {\n    var assign = Math.floor(Math.random() * 5);\n    console.log(assign);\n\n    switch (this.cardColor = assign) {\n      case 0:\n        this.cardColor = 'red';\n        break;\n\n      case 1:\n        this.cardColor = 'yellow';\n        break;\n\n      case 2:\n        this.cardColor = 'blue';\n        break;\n\n      case 3:\n        this.cardColor = 'green';\n        break;\n\n      case 4:\n        this.cardColor = 'gray';\n        break;\n\n      case 5:\n        this.cardColor = 'white';\n        break;\n\n      case 6:\n        this.cardColor = 'black';\n        break;\n    }\n  }\n\n  render() {\n    return React.createElement(\"td\", {\n      onClick: () => this.cardState(),\n      style: {\n        backgroundColor: cardColor,\n        border: 'solid 1px white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["C:/Users/Ferna/Documents/GitHub/FWDProject2/src/Card.js"],"names":["React","Component","Card","constructor","props","state","cardColor","cardState","bind","assign","Math","floor","random","console","log","render","backgroundColor","border"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC5BE,EAAAA,WAAW,CAAEC,KAAF,EAAS;AACnB,UAAOA,KAAP;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAG;AADA,KAAb;AAIA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA;;AACDD,EAAAA,SAAS,GAAI;AACZ,QAAIE,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,CAAzB,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AACA,YAAO,KAAKH,SAAL,GAAiBG,MAAxB;AACC,WAAK,CAAL;AACA,aAAKH,SAAL,GAAiB,KAAjB;AACA;;AACA,WAAK,CAAL;AACA,aAAKA,SAAL,GAAiB,QAAjB;AACA;;AACA,WAAK,CAAL;AACA,aAAKA,SAAL,GAAiB,MAAjB;AACA;;AACA,WAAK,CAAL;AACA,aAAKA,SAAL,GAAiB,OAAjB;AACA;;AACA,WAAK,CAAL;AACA,aAAKA,SAAL,GAAiB,MAAjB;AACA;;AACA,WAAK,CAAL;AACA,aAAKA,SAAL,GAAiB,OAAjB;AACA;;AACA,WAAK,CAAL;AACA,aAAKA,SAAL,GAAiB,OAAjB;AACA;AArBD;AAuBA;;AACDS,EAAAA,MAAM,GAAI;AACT,WACC;AAAI,MAAA,OAAO,EAAE,MAAM,KAAKR,SAAL,EAAnB;AAAqC,MAAA,KAAK,EAAG;AAACS,QAAAA,eAAe,EAAEV,SAAlB;AAA6BW,QAAAA,MAAM,EAAE;AAArC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGA;;AAzC2B;;AA6C7B,eAAef,IAAf","sourcesContent":["import React, { Component } from 'react'; \r\n\r\n\r\nclass Card extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper (props); \r\n\r\n\t\tthis.state = {\r\n\t\t\tcardColor : \"black\"\r\n\t\t}\r\n\t\t\r\n\t\tthis.cardState = this.cardState.bind(this);\r\n\t}\r\n\tcardState () {\r\n\t\tvar assign = Math.floor(Math.random()*5);\r\n\t\tconsole.log(assign);\r\n\t\tswitch(this.cardColor = assign) {\r\n\t\t\tcase 0:\r\n\t\t\tthis.cardColor = 'red';\r\n\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\tthis.cardColor = 'yellow'; \r\n\t\t\tbreak;\r\n\t\t\tcase 2: \r\n\t\t\tthis.cardColor = 'blue';\r\n\t\t\tbreak; \r\n\t\t\tcase 3: \r\n\t\t\tthis.cardColor = 'green'; \r\n\t\t\tbreak; \r\n\t\t\tcase 4: \r\n\t\t\tthis.cardColor = 'gray'; \r\n\t\t\tbreak; \r\n\t\t\tcase 5: \r\n\t\t\tthis.cardColor = 'white';\r\n\t\t\tbreak; \r\n\t\t\tcase 6: \r\n\t\t\tthis.cardColor = 'black';\r\n\t\t\tbreak; \r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<td onClick={() => this.cardState()} style ={{backgroundColor: cardColor, border: 'solid 1px white' }}></td>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default Card; \r\n"]},"metadata":{},"sourceType":"module"}