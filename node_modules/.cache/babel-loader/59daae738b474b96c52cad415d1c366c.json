{"ast":null,"code":"import _slicedToArray from \"/Users/daho/Documents/GitHub/FWDProject2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/daho/Documents/GitHub/FWDProject2/src/App.js\";\nimport React from 'react';\nimport Card from './Card';\nimport Timer from './Timer';\nimport './App.css';\nimport { useState } from 'react';\nimport _ from 'lodash';\nconst possibleIDs = [1, 1, 2, 2, 3, 3, 4, 4, 5, 5];\n\nfunction resetBoard() {//Resets the state and props to their initial state \n}\n\nfunction App() {\n  const _useState = useState([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),\n        _useState2 = _slicedToArray(_useState, 2),\n        cards = _useState2[0],\n        setCards = _useState2[1]; //0 unflipped, 1 flipped\n\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        victory = _useState4[0],\n        setVictory = _useState4[1]; //0 no victory, 1 victory\n\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cardID = _useState6[0],\n        setCardID = _useState6[1]; //0 no ID 1 red 2 yellow 3 green 4 blue 5 purple\n\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        timer = _useState8[0],\n        setTimerState = _useState8[1]; //0 timer off, 1 timer on\n\n\n  function assignCard(cardIndex) {\n    if (victory === 0 && cardID === 0) {\n      _.shuffle(possibleIDs);\n    } else if (victory === 0 && cardID !== 0) {}\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Timer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    onClick: () => resetBoard(cardState, setCardState, cardID, setCardID, victory, setVictory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" Reset \"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/daho/Documents/GitHub/FWDProject2/src/App.js"],"names":["React","Card","Timer","useState","_","possibleIDs","resetBoard","App","cards","setCards","victory","setVictory","cardID","setCardID","timer","setTimerState","assignCard","cardIndex","shuffle","cardState","setCardState"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAiB,SAAjB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,WAAW,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,CAApB;;AAEA,SAASC,UAAT,GACA,CACE;AACD;;AAED,SAASC,GAAT,GAAe;AAAA,oBACYJ,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,CAAD,CADpB;AAAA;AAAA,QACPK,KADO;AAAA,QACAC,QADA,kBAC6C;;;AAD7C,qBAEgBN,QAAQ,CAAC,CAAD,CAFxB;AAAA;AAAA,QAEPO,OAFO;AAAA,QAEEC,UAFF,kBAE6B;;;AAF7B,qBAGcR,QAAQ,CAAC,CAAD,CAHtB;AAAA;AAAA,QAGPS,MAHO;AAAA,QAGCC,SAHD,kBAG2B;;;AAH3B,qBAIiBV,QAAQ,CAAC,CAAD,CAJzB;AAAA;AAAA,QAIPW,KAJO;AAAA,QAIAC,aAJA,kBAI8B;;;AAC3C,WAASC,UAAT,CAAoBC,SAApB,EACA;AACE,QAAGP,OAAO,KAAK,CAAZ,IAAiBE,MAAM,KAAK,CAA/B,EACA;AACIR,MAAAA,CAAC,CAACc,OAAF,CAAUb,WAAV;AACH,KAHD,MAIK,IAAGK,OAAO,KAAK,CAAZ,IAAiBE,MAAM,KAAK,CAA/B,EACL,CAEC;AACF;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CARF,CAFF,EAkBE;AAAQ,IAAA,OAAO,EAAE,MAAMN,UAAU,CAACa,SAAD,EAAYC,YAAZ,EAA0BR,MAA1B,EAAkCC,SAAlC,EAA6CH,OAA7C,EAAsDC,UAAtD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBF,CADF;AAsBD;;AAED,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport Card from './Card';\nimport Timer from'./Timer';\nimport './App.css';\nimport { useState } from 'react';\nimport _ from 'lodash';\n\nconst possibleIDs = [1,1,2,2,3,3,4,4,5,5];\n\nfunction resetBoard()\n{\n  //Resets the state and props to their initial state \n}\n\nfunction App() {\n  const[cards, setCards] = useState([0,0,0,0,0,0,0,0,0,0]); //0 unflipped, 1 flipped\n  const[victory, setVictory] = useState(0); //0 no victory, 1 victory\n  const[cardID, setCardID] = useState(0); //0 no ID 1 red 2 yellow 3 green 4 blue 5 purple\n  const[timer, setTimerState] = useState(0); //0 timer off, 1 timer on\n  function assignCard(cardIndex)\n  {\n    if(victory === 0 && cardID === 0)\n    {\n        _.shuffle(possibleIDs); \n    }\n    else if(victory === 0 && cardID !== 0)\n    {\n\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Timer/> \n      <table>\n        <tr>\n          <Card/> \n          <Card/>\n          <Card/>\n          <Card/>\n          <Card/>\n        </tr>\n        <tr>\n          <Card/>\n          <Card/>\n          <Card/>\n          <Card/>\n          <Card/> \n        </tr>\n      </table>\n      <button onClick={() => resetBoard(cardState, setCardState, cardID, setCardID, victory, setVictory)}> Reset </button> \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}