{"ast":null,"code":"import _slicedToArray from \"/Users/daho/Documents/GitHub/FWDProject2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/daho/Documents/GitHub/FWDProject2/src/App.js\";\nimport React from 'react';\nimport Card from './Card';\nimport Timer from './Timer';\nimport './App.css';\nimport { useState } from 'react';\nimport _ from 'lodash';\nconst possibleCards = [{\n  color: 'red',\n  flipped: false,\n  matched: false\n}, {\n  color: 'red',\n  flipped: false,\n  matched: false\n}, {\n  color: 'yellow',\n  flipped: false,\n  matched: false\n}, {\n  color: 'yellow',\n  flipped: false,\n  matched: false\n}, {\n  color: 'blue',\n  flipped: false,\n  matched: false\n}, {\n  color: 'blue',\n  flipped: false,\n  matched: false\n}, {\n  color: 'green',\n  flipped: false,\n  matched: false\n}, {\n  color: 'green',\n  flipped: false,\n  matched: false\n}, {\n  color: 'orange',\n  flipped: false,\n  matched: false\n}, {\n  color: 'orange',\n  flipped: false,\n  matched: false\n}];\n\nfunction resetBoard() {\n  return _.cloneDeep(_.shuffle(possibleCards)); //clones the object so original remains in tact\n}\n\nfunction flipCard(cardId, cards, setCards) {\n  var i;\n\n  for (i = possibleCards.length; i > 0; i--) //for cards in the array\n  {\n    if (!cards[i].flipped && !cards[i].matched) //if no card is flipped\n      {\n        cards[cardId].flipped = true; //flip first card\n      } else //if flip card is found\n      {\n        cards[cardId].flipped = true; //flip second card\n\n        if (cards[cardId].color === cards[i].color) //if they have the same color set match to true\n          {\n            cards[cardId].matched = true;\n            cards[i].matched = true;\n          } else {\n          let interval;\n          interval = setTimeout(() => {\n            cards[cardId].flipped = false;\n            cards[i].flipped = false;\n          }, 1000);\n        }\n      }\n  }\n}\n\nfunction App() {\n  const _useState = useState(resetBoard()),\n        _useState2 = _slicedToArray(_useState, 2),\n        cards = _useState2[0],\n        setCards = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        victory = _useState4[0],\n        setVictory = _useState4[1]; //0 no victory, 1 victory\n\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        timerOn = _useState6[0],\n        setTimerOn = _useState6[1]; //0 timer off, 1 timer on\n\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Timer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Card, {\n    card: cards[0],\n    onClick: () => flipCard(0, cards, setCards),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[1],\n    onClick: () => flipCard(1, cards, setCards),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[2],\n    onClick: () => flipCard(2, cards, setCards),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[3],\n    onClick: () => flipCard(3, cards, setCards),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[4],\n    onClick: () => flipCard(4, cards, setCards),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Card, {\n    card: cards[5],\n    onClick: () => flipCard(5, cards, setCards),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[6],\n    onClick: () => flipCard(6, cards, setCards),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[7],\n    onClick: () => flipCard(7, cards, setCards),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[8],\n    onClick: () => flipCard(8, cards, setCards),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[9],\n    onClick: () => flipCard(9, cards, setCards),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    onClick: () => setCards(resetBoard()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \" Reset \"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/daho/Documents/GitHub/FWDProject2/src/App.js"],"names":["React","Card","Timer","useState","_","possibleCards","color","flipped","matched","resetBoard","cloneDeep","shuffle","flipCard","cardId","cards","setCards","i","length","interval","setTimeout","App","victory","setVictory","timerOn","setTimerOn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from './Card';\nimport Timer from'./Timer';\nimport './App.css';\nimport { useState } from 'react';\nimport _ from 'lodash';\n\nconst possibleCards = \n[\n  { color : 'red', flipped: false, matched:false},\n  { color : 'red', flipped: false, matched:false},\n  { color : 'yellow', flipped: false, matched:false },\n  { color : 'yellow', flipped: false, matched:false },\n  { color : 'blue', flipped: false, matched:false },\n  { color : 'blue', flipped: false, matched:false },\n  { color : 'green', flipped: false, matched:false },\n  { color : 'green', flipped: false, matched:false },\n  { color : 'orange', flipped: false, matched:false },\n  { color : 'orange', flipped: false, matched:false }\n]\n\nfunction resetBoard()\n{\n  return _.cloneDeep(_.shuffle(possibleCards)); //clones the object so original remains in tact\n}\n\nfunction flipCard(cardId, cards, setCards)\n{\n  var i;\n  for(i = possibleCards.length ; i > 0; i--) //for cards in the array\n  {\n    if(!cards[i].flipped && !cards[i].matched) //if no card is flipped\n    {\n      cards[cardId].flipped = true; //flip first card\n    }\n    else //if flip card is found\n    {\n      cards[cardId].flipped = true; //flip second card\n      if(cards[cardId].color === cards[i].color) //if they have the same color set match to true\n      {\n        cards[cardId].matched = true;\n        cards[i].matched = true;\n      }\n      else\n      {\n        let interval;\n        interval = setTimeout(() => {\n          cards[cardId].flipped = false;\n          cards[i].flipped = false;\n        }, 1000);\n      }\n    }\n  }\n}\n\nfunction App() {\n  const[cards, setCards] = useState(resetBoard()); \n  const[victory, setVictory] = useState(false); //0 no victory, 1 victory\n  const[timerOn, setTimerOn] = useState(false); //0 timer off, 1 timer on\n  return (\n    <div className=\"App\">\n      <Timer/> \n      <table>\n        <tr>\n          <Card card = {cards[0]} onClick={() => flipCard(0, cards, setCards)}/> \n          <Card card = {cards[1]} onClick={() => flipCard(1, cards, setCards)}/>\n          <Card card = {cards[2]} onClick={() => flipCard(2, cards, setCards)}/>\n          <Card card = {cards[3]} onClick={() => flipCard(3, cards, setCards)}/>\n          <Card card = {cards[4]} onClick={() => flipCard(4, cards, setCards)}/>\n        </tr>\n        <tr>\n          <Card card = {cards[5]} onClick={() => flipCard(5, cards, setCards)}/>\n          <Card card = {cards[6]} onClick={() => flipCard(6, cards, setCards)}/>\n          <Card card = {cards[7]} onClick={() => flipCard(7, cards, setCards)}/>\n          <Card card = {cards[8]} onClick={() => flipCard(8, cards, setCards)}/>\n          <Card card = {cards[9]} onClick={() => flipCard(9, cards, setCards)}/> \n        </tr>\n      </table>\n      <button onClick={() => setCards(resetBoard())}> Reset </button> \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}