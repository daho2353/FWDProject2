{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferna\\\\Documents\\\\GitHub\\\\FWDProject2\\\\src\\\\Card.js\";\nimport React, { Component } from 'react';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props); // props include card state (0,1,2) and card id (1-5)\n\n    this.state = {\n      cardColor: 'black' // background color changes making it a state\n\n    };\n  }\n\n  render() {\n    if (this.props.cardState == 0) {\n      // card is unflipped \n      this.setState({\n        cardColor: 'black'\n      });\n    } else if (this.props.cardState == 1) {\n      // card is flipped and based on Id a color is assigned\n      switch (this.state.cardColor = this.props.cardId) {\n        case 0:\n          this.setState({\n            cardColor: 'red'\n          });\n          break;\n\n        case 1:\n          this.setState({\n            cardColor: 'yellow'\n          });\n          break;\n\n        case 2:\n          this.setState({\n            cardColor: 'blue'\n          });\n          break;\n\n        case 3:\n          this.setState({\n            cardColor: 'green'\n          });\n          break;\n\n        case 4:\n          this.setState({\n            cardColor: 'orange'\n          });\n          break;\n      }\n    } else {\n      // two cards have matched\n      this.setState({\n        cardColor: 'white'\n      });\n    }\n\n    return React.createElement(\"td\", {\n      style: {\n        backgroundColor: this.state.cardColor,\n        border: 'solid 1px white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["C:/Users/Ferna/Documents/GitHub/FWDProject2/src/Card.js"],"names":["React","Component","Card","constructor","props","state","cardColor","render","cardState","setState","cardId","backgroundColor","border"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAIA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC5BE,EAAAA,WAAW,CAAEC,KAAF,EAAS;AACnB,UAAOA,KAAP,EADmB,CACJ;;AAEf,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE,OADC,CACO;;AADP,KAAb;AAGA;;AACDC,EAAAA,MAAM,GAAI;AAET,QAAI,KAAKH,KAAL,CAAWI,SAAX,IAAwB,CAA5B,EAA+B;AAAE;AAChC,WAAKC,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACA,KAFD,MAEM,IAAI,KAAKF,KAAL,CAAWI,SAAX,IAAwB,CAA5B,EAA+B;AAAE;AACtC,cAAO,KAAKH,KAAL,CAAWC,SAAX,GAAuB,KAAKF,KAAL,CAAWM,MAAzC;AACC,aAAK,CAAL;AACA,eAAKD,QAAL,CAAc;AAACH,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACA;;AACA,aAAK,CAAL;AACA,eAAKG,QAAL,CAAc;AAACH,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACA;;AACA,aAAK,CAAL;AACA,eAAKG,QAAL,CAAc;AAACH,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACA;;AACA,aAAK,CAAL;AACA,eAAKG,QAAL,CAAc;AAACH,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACA;;AACA,aAAK,CAAL;AACA,eAAKG,QAAL,CAAc;AAACH,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACA;AAfD;AAiBA,KAlBK,MAkBA;AAAG;AACR,WAAKG,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAC;AAAX,OAAd;AACA;;AACD,WACC;AAAI,MAAA,KAAK,EAAG;AAACK,QAAAA,eAAe,EAAE,KAAKN,KAAL,CAAWC,SAA7B;AAAwCM,QAAAA,MAAM,EAAE;AAAhD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGA;;AApC2B;;AAwC7B,eAAeV,IAAf","sourcesContent":["import React, { Component } from 'react'; \r\n\r\n\r\n\r\nclass Card extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper (props); // props include card state (0,1,2) and card id (1-5)\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tcardColor: 'black' // background color changes making it a state\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\r\n\t\tif (this.props.cardState == 0) { // card is unflipped \r\n\t\t\tthis.setState({cardColor: 'black'}); \r\n\t\t}else if (this.props.cardState == 1) { // card is flipped and based on Id a color is assigned\r\n\t\t\tswitch(this.state.cardColor = this.props.cardId) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\tthis.setState({cardColor: 'red'});\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\tthis.setState({cardColor: 'yellow'});\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 2: \r\n\t\t\t\tthis.setState({cardColor: 'blue'});\r\n\t\t\t\tbreak; \r\n\t\t\t\tcase 3: \r\n\t\t\t\tthis.setState({cardColor: 'green'});\r\n\t\t\t\tbreak; \r\n\t\t\t\tcase 4: \r\n\t\t\t\tthis.setState({cardColor: 'orange'});\r\n\t\t\t\tbreak; \r\n\t\t\t}\r\n\t\t}else {  // two cards have matched\r\n\t\t\tthis.setState({cardColor:'white'}); \r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<td style ={{backgroundColor: this.state.cardColor, border: 'solid 1px white' }}></td>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default Card; \r\n"]},"metadata":{},"sourceType":"module"}