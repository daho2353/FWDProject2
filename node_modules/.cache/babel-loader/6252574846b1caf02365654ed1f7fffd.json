{"ast":null,"code":"import _slicedToArray from \"/Users/daho/Documents/GitHub/FWDProject2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/daho/Documents/GitHub/FWDProject2/src/App.js\";\nimport React from 'react';\nimport Card from './Card';\nimport Timer from './Timer';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport _ from 'lodash';\nconst possibleCards = [{\n  color: 'red',\n  flipped: false,\n  matched: false\n}, {\n  color: 'red',\n  flipped: false,\n  matched: false\n}, {\n  color: 'yellow',\n  flipped: false,\n  matched: false\n}, {\n  color: 'yellow',\n  flipped: false,\n  matched: false\n}, {\n  color: 'blue',\n  flipped: false,\n  matched: false\n}, {\n  color: 'blue',\n  flipped: false,\n  matched: false\n}, {\n  color: 'green',\n  flipped: false,\n  matched: false\n}, {\n  color: 'green',\n  flipped: false,\n  matched: false\n}, {\n  color: 'orange',\n  flipped: false,\n  matched: false\n}, {\n  color: 'orange',\n  flipped: false,\n  matched: false\n}];\n\nfunction resetBoard(setCards, setTimerOn) {\n  setCards(shuffleCards());\n  setTimerOn(false);\n}\n\nfunction shuffleCards() {\n  return _.cloneDeep(_.shuffle(possibleCards)); //clones the object so original remains in tact\n}\n\nfunction flipCard(cardId, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory) {\n  if (!canClick) {\n    return;\n  }\n\n  if (timerOn === false) {\n    setTimerOn(true);\n  }\n\n  let previousCard = _.find(cards, {\n    flipped: true,\n    matched: false\n  }); //finds card that is flipped and unmatched\n\n\n  if (!previousCard) //if no card is flipped\n    {\n      cards[cardId].flipped = true; //flip first card\n\n      previousCard = cards[cardId];\n      setCards([...cards]); //setState\n    } else //if flip card is found\n    {\n      cards[cardId].flipped = true; //flip second card\n\n      if (cards[cardId].color === previousCard.color) //if they have the same color set match to true\n        {\n          cards[cardId].matched = true;\n          previousCard.matched = true;\n          setCards([...cards]);\n\n          if (_.every(cards, {\n            matched: true\n          })) {\n            setVictory(currentTime);\n            setTimerOn(false);\n          }\n        } else //wait then set match to false\n        {\n          setCanClick(false);\n          setCards([...cards]);\n          setTimeout(() => {\n            setCanClick(true);\n            cards[cardId].flipped = false;\n            previousCard.flipped = false;\n            setCards([...cards]);\n          }, 1000);\n        }\n    }\n}\n\nfunction VictoryTime(props) {\n  if (props.time !== 0) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" your most recent score is \", props.time, \" seconds!\");\n  }\n}\n\nfunction App() {\n  const _useState = useState(shuffleCards()),\n        _useState2 = _slicedToArray(_useState, 2),\n        cards = _useState2[0],\n        setCards = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        victory = _useState4[0],\n        setVictory = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        timerOn = _useState6[0],\n        setTimerOn = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        canClick = _useState8[0],\n        setCanClick = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        currentTime = _useState10[0],\n        setCurrentTime = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        timer = _useState12[0],\n        setTimer = _useState12[1];\n\n  useEffect(() => {\n    if (timerOn && !timer) {\n      setTimer(setInterval(() => {\n        setCurrentTime(currentTime => currentTime + 1);\n      }, 1000));\n    } else if (!timerOn && currentTime !== 0) {\n      clearInterval(timer);\n      setCurrentTime(0);\n      setTimer(null);\n    }\n  });\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Timer, {\n    currentTime: currentTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Card, {\n    card: cards[0],\n    onClick: () => flipCard(0, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[1],\n    onClick: () => flipCard(1, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[2],\n    onClick: () => flipCard(2, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[3],\n    onClick: () => flipCard(3, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[4],\n    onClick: () => flipCard(4, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Card, {\n    card: cards[5],\n    onClick: () => flipCard(5, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[6],\n    onClick: () => flipCard(6, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[7],\n    onClick: () => flipCard(7, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[8],\n    onClick: () => flipCard(8, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(Card, {\n    card: cards[9],\n    onClick: () => flipCard(9, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    onClick: () => resetBoard(setCards, setTimerOn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \" Reset \"), React.createElement(VictoryTime, {\n    time: victory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/daho/Documents/GitHub/FWDProject2/src/App.js"],"names":["React","Card","Timer","useState","useEffect","_","possibleCards","color","flipped","matched","resetBoard","setCards","setTimerOn","shuffleCards","cloneDeep","shuffle","flipCard","cardId","cards","timerOn","canClick","setCanClick","currentTime","setVictory","previousCard","find","every","setTimeout","VictoryTime","props","time","App","victory","setCurrentTime","timer","setTimer","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from './Card';\nimport Timer from'./Timer';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport _ from 'lodash';\n\nconst possibleCards = \n[\n  { color : 'red', flipped: false, matched:false},\n  { color : 'red', flipped: false, matched:false},\n  { color : 'yellow', flipped: false, matched:false },\n  { color : 'yellow', flipped: false, matched:false },\n  { color : 'blue', flipped: false, matched:false },\n  { color : 'blue', flipped: false, matched:false },\n  { color : 'green', flipped: false, matched:false },\n  { color : 'green', flipped: false, matched:false },\n  { color : 'orange', flipped: false, matched:false },\n  { color : 'orange', flipped: false, matched:false }\n]\n\nfunction resetBoard(setCards, setTimerOn)\n{\n  setCards(shuffleCards());\n  setTimerOn(false);\n}\n\nfunction shuffleCards()\n{\n  return _.cloneDeep(_.shuffle(possibleCards)); //clones the object so original remains in tact\n}\n\nfunction flipCard(cardId, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)\n{\n  if(!canClick)\n  {\n    return;\n  }\n  if(timerOn === false)\n  {\n    setTimerOn(true);\n  }\n  let previousCard = _.find(cards, {flipped:true, matched:false}); //finds card that is flipped and unmatched\n  if(!previousCard) //if no card is flipped\n  {\n    cards[cardId].flipped = true; //flip first card\n    previousCard = cards[cardId];\n    setCards([...cards]); //setState\n  }\n  else //if flip card is found\n  {\n    cards[cardId].flipped = true; //flip second card\n    if(cards[cardId].color === previousCard.color) //if they have the same color set match to true\n    {\n      cards[cardId].matched = true; \n      previousCard.matched = true;\n      setCards([...cards]);\n      if(_.every(cards, {matched:true}))\n      {\n        setVictory(currentTime);\n        setTimerOn(false);\n      }\n    }\n    else //wait then set match to false\n    {\n      setCanClick(false);\n      setCards([...cards]);\n      setTimeout(() => {\n        setCanClick(true);\n        cards[cardId].flipped = false;\n        previousCard.flipped = false;\n        setCards([...cards]);\n      }, 1000);\n    }\n  }\n}\n\nfunction VictoryTime(props)\n{\n  if(props.time !== 0 )\n  {\n    return(\n      <p> your most recent score is {props.time} seconds!</p>\n    );\n  }\n}\n\nfunction App() {\n  const[cards, setCards] = useState(shuffleCards()); \n  const[victory, setVictory] = useState(0); \n  const[timerOn, setTimerOn] = useState(false);\n  const[canClick, setCanClick] = useState(true);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [timer, setTimer] = useState(null);\n  useEffect(() => {    \n    if (timerOn && !timer) \n    {\n      setTimer( setInterval(() => {\n        setCurrentTime(currentTime => currentTime + 1);\n      }, 1000));\n    } \n    else if (!timerOn && currentTime !== 0) \n    {\n      clearInterval(timer);\n      setCurrentTime(0);\n      setTimer(null);\n    }\n  });\n  return (\n    <div className=\"App\">\n      <Timer currentTime = {currentTime}/> \n      <table>\n        <tr>\n          <Card card = {cards[0]} onClick={() => flipCard(0, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/> \n          <Card card = {cards[1]} onClick={() => flipCard(1, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[2]} onClick={() => flipCard(2, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[3]} onClick={() => flipCard(3, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[4]} onClick={() => flipCard(4, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n        </tr>\n        <tr>\n          <Card card = {cards[5]} onClick={() => flipCard(5, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[6]} onClick={() => flipCard(6, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[7]} onClick={() => flipCard(7, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[8]} onClick={() => flipCard(8, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[9]} onClick={() => flipCard(9, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/> \n        </tr>\n      </table>\n      <button onClick={() => resetBoard(setCards, setTimerOn)}> Reset </button> \n      <VictoryTime time = {victory}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}