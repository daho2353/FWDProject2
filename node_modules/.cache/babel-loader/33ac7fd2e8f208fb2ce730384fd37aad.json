{"ast":null,"code":"import _slicedToArray from\"/Users/daho/Documents/GitHub/FWDProject2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/Users/daho/Documents/GitHub/FWDProject2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import Card from'./Card';import Timer from'./Timer';import'./App.css';import{useState,useEffect}from'react';import _ from'lodash';//lodash library gives you many useful commands\nvar possibleCards=//object of possible cards\n[{color:'red',flipped:false,matched:false},{color:'red',flipped:false,matched:false},{color:'yellow',flipped:false,matched:false},{color:'yellow',flipped:false,matched:false},{color:'blue',flipped:false,matched:false},{color:'blue',flipped:false,matched:false},{color:'green',flipped:false,matched:false},{color:'green',flipped:false,matched:false},{color:'orange',flipped:false,matched:false},{color:'orange',flipped:false,matched:false}];function resetBoard(setCards,setTimerOn)//stops timer and shuffles deck\n{setCards(shuffleCards());setTimerOn(false);}function shuffleCards()//shuffles deck\n{return _.cloneDeep(_.shuffle(possibleCards));//clones the object so original remains in tact\n}function flipCard(cardId,cards,setCards,timerOn,setTimerOn,canClick,setCanClick,currentTime,setVictory){if(!canClick)//makes it so users can't click on cards when cards are already flipped\n{return;}if(timerOn===false)//starts the timer if timer is not on\n{setTimerOn(true);}var previousCard=_.find(cards,{flipped:true,matched:false});//finds card that is flipped and unmatched\nif(!previousCard)//if no card is flipped\n{cards[cardId].flipped=true;//flip first card\npreviousCard=cards[cardId];setCards(_toConsumableArray(cards));//setState\n}else//if flip card is found\n{cards[cardId].flipped=true;//flip second card\nif(cards[cardId].color===previousCard.color)//if they have the same color set match to true\n{cards[cardId].matched=true;previousCard.matched=true;setCards(_toConsumableArray(cards));if(_.every(cards,{matched:true}))//if all cards are matched\n{setVictory(currentTime);//set highscore\nsetTimerOn(false);//stop timer\n}}else//wait then set match to false\n{setCanClick(false);//make it so users can't click until timer is over\nsetCards(_toConsumableArray(cards));setTimeout(function(){setCanClick(true);//make it so users can click again\ncards[cardId].flipped=false;//unflip\npreviousCard.flipped=false;setCards(_toConsumableArray(cards));},1000);}}}function VictoryTime(props)//mini component that displays the high score\n{if(props.time!==0){return React.createElement(\"p\",null,\" your most recent score is \",props.time,\" seconds!\");}else{return React.createElement(\"p\",null);}}function App(){var _useState=useState(shuffleCards()),_useState2=_slicedToArray(_useState,2),cards=_useState2[0],setCards=_useState2[1];//The deck of cards and it's values\nvar _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),victory=_useState4[0],setVictory=_useState4[1];// High score time\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),timerOn=_useState6[0],setTimerOn=_useState6[1];// timer on/off\nvar _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),canClick=_useState8[0],setCanClick=_useState8[1];// can interact with board on/off\nvar _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),currentTime=_useState10[0],setCurrentTime=_useState10[1];// timer value\nvar _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),timer=_useState12[0],setTimer=_useState12[1];// timer display\nuseEffect(function(){//Israel's code\nif(timerOn&&!timer){setTimer(setInterval(function(){setCurrentTime(function(currentTime){return currentTime+1;});},1000));}else if(!timerOn&&currentTime!==0){clearInterval(timer);setCurrentTime(0);setTimer(null);}});return(//JSX below\nReact.createElement(\"div\",{className:\"App\"},React.createElement(Timer,{currentTime:currentTime}),React.createElement(\"table\",null,React.createElement(\"tr\",null,React.createElement(Card,{card:cards[0],onClick:function onClick(){return flipCard(0,cards,setCards,timerOn,setTimerOn,canClick,setCanClick,currentTime,setVictory);}}),React.createElement(Card,{card:cards[1],onClick:function onClick(){return flipCard(1,cards,setCards,timerOn,setTimerOn,canClick,setCanClick,currentTime,setVictory);}}),React.createElement(Card,{card:cards[2],onClick:function onClick(){return flipCard(2,cards,setCards,timerOn,setTimerOn,canClick,setCanClick,currentTime,setVictory);}}),React.createElement(Card,{card:cards[3],onClick:function onClick(){return flipCard(3,cards,setCards,timerOn,setTimerOn,canClick,setCanClick,currentTime,setVictory);}}),React.createElement(Card,{card:cards[4],onClick:function onClick(){return flipCard(4,cards,setCards,timerOn,setTimerOn,canClick,setCanClick,currentTime,setVictory);}})),React.createElement(\"tr\",null,React.createElement(Card,{card:cards[5],onClick:function onClick(){return flipCard(5,cards,setCards,timerOn,setTimerOn,canClick,setCanClick,currentTime,setVictory);}}),React.createElement(Card,{card:cards[6],onClick:function onClick(){return flipCard(6,cards,setCards,timerOn,setTimerOn,canClick,setCanClick,currentTime,setVictory);}}),React.createElement(Card,{card:cards[7],onClick:function onClick(){return flipCard(7,cards,setCards,timerOn,setTimerOn,canClick,setCanClick,currentTime,setVictory);}}),React.createElement(Card,{card:cards[8],onClick:function onClick(){return flipCard(8,cards,setCards,timerOn,setTimerOn,canClick,setCanClick,currentTime,setVictory);}}),React.createElement(Card,{card:cards[9],onClick:function onClick(){return flipCard(9,cards,setCards,timerOn,setTimerOn,canClick,setCanClick,currentTime,setVictory);}}))),React.createElement(\"button\",{onClick:function onClick(){return resetBoard(setCards,setTimerOn);}},\" Reset \"),React.createElement(VictoryTime,{time:victory})));}export default App;","map":{"version":3,"sources":["/Users/daho/Documents/GitHub/FWDProject2/src/App.js"],"names":["React","Card","Timer","useState","useEffect","_","possibleCards","color","flipped","matched","resetBoard","setCards","setTimerOn","shuffleCards","cloneDeep","shuffle","flipCard","cardId","cards","timerOn","canClick","setCanClick","currentTime","setVictory","previousCard","find","every","setTimeout","VictoryTime","props","time","App","victory","setCurrentTime","timer","setTimer","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from './Card';\nimport Timer from'./Timer';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport _ from 'lodash'; //lodash library gives you many useful commands\n\nconst possibleCards = //object of possible cards\n[\n  { color : 'red', flipped: false, matched:false},\n  { color : 'red', flipped: false, matched:false},\n  { color : 'yellow', flipped: false, matched:false },\n  { color : 'yellow', flipped: false, matched:false },\n  { color : 'blue', flipped: false, matched:false },\n  { color : 'blue', flipped: false, matched:false },\n  { color : 'green', flipped: false, matched:false },\n  { color : 'green', flipped: false, matched:false },\n  { color : 'orange', flipped: false, matched:false },\n  { color : 'orange', flipped: false, matched:false }\n]\n\nfunction resetBoard(setCards, setTimerOn) //stops timer and shuffles deck\n{\n  setCards(shuffleCards());\n  setTimerOn(false);\n}\n\nfunction shuffleCards() //shuffles deck\n{\n  return _.cloneDeep(_.shuffle(possibleCards)); //clones the object so original remains in tact\n}\n\nfunction flipCard(cardId, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)\n{\n  if(!canClick) //makes it so users can't click on cards when cards are already flipped\n  {\n    return;\n  }\n  if(timerOn === false) //starts the timer if timer is not on\n  {\n    setTimerOn(true);\n  }\n  let previousCard = _.find(cards, {flipped:true, matched:false}); //finds card that is flipped and unmatched\n  if(!previousCard) //if no card is flipped\n  {\n    cards[cardId].flipped = true; //flip first card\n    previousCard = cards[cardId]; \n    setCards([...cards]); //setState\n  }\n  else //if flip card is found\n  {\n    cards[cardId].flipped = true; //flip second card\n    if(cards[cardId].color === previousCard.color) //if they have the same color set match to true\n    {\n      cards[cardId].matched = true; \n      previousCard.matched = true;\n      setCards([...cards]);\n      if(_.every(cards, {matched:true})) //if all cards are matched\n      {\n        setVictory(currentTime); //set highscore\n        setTimerOn(false); //stop timer\n      }\n    }\n    else //wait then set match to false\n    {\n      setCanClick(false); //make it so users can't click until timer is over\n      setCards([...cards]);\n      setTimeout(() => {\n        setCanClick(true); //make it so users can click again\n        cards[cardId].flipped = false; //unflip\n        previousCard.flipped = false;\n        setCards([...cards]);\n      }, 1000);\n    }\n  }\n}\n\nfunction VictoryTime(props) //mini component that displays the high score\n{\n  if(props.time !== 0 )\n  {\n    return(\n      <p> your most recent score is {props.time} seconds!</p>\n    );\n  }\n  else\n  {\n    return(\n      <p></p>\n    )\n  }\n}\n\nfunction App() {\n  const[cards, setCards] = useState(shuffleCards()); //The deck of cards and it's values\n  const[victory, setVictory] = useState(0);  // High score time\n  const[timerOn, setTimerOn] = useState(false); // timer on/off\n  const[canClick, setCanClick] = useState(true); // can interact with board on/off\n  const [currentTime, setCurrentTime] = useState(0); // timer value\n  const [timer, setTimer] = useState(null);// timer display\n  useEffect(() => {    //Israel's code\n    if (timerOn && !timer) \n    {\n      setTimer( setInterval(() => {\n        setCurrentTime(currentTime => currentTime + 1);\n      }, 1000));\n    } \n    else if (!timerOn && currentTime !== 0) \n    {\n      clearInterval(timer);\n      setCurrentTime(0);\n      setTimer(null);\n    }\n  });\n  return ( //JSX below\n    <div className=\"App\">\n      <Timer currentTime = {currentTime}/> \n      <table>\n        <tr>\n          <Card card = {cards[0]} onClick={() => flipCard(0, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/> \n          <Card card = {cards[1]} onClick={() => flipCard(1, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[2]} onClick={() => flipCard(2, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[3]} onClick={() => flipCard(3, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[4]} onClick={() => flipCard(4, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n        </tr>\n        <tr>\n          <Card card = {cards[5]} onClick={() => flipCard(5, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[6]} onClick={() => flipCard(6, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[7]} onClick={() => flipCard(7, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[8]} onClick={() => flipCard(8, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/>\n          <Card card = {cards[9]} onClick={() => flipCard(9, cards, setCards, timerOn, setTimerOn, canClick, setCanClick, currentTime, setVictory)}/> \n        </tr>\n      </table>\n      <button onClick={() => resetBoard(setCards, setTimerOn)}> Reset </button> \n      <VictoryTime time = {victory}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}