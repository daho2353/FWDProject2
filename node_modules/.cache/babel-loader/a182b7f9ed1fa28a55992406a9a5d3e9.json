{"ast":null,"code":"import _slicedToArray from \"/Users/Mac/Desktop/GitHub Repo/FWDProject2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Mac/Desktop/GitHub Repo/FWDProject2/src/Timer.js\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nfunction Timer(props) {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentTime = _useState2[0],\n        setCurrentTime = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isActive = _useState4[0],\n        setIsActive = _useState4[1];\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setCurrentTime(0);\n    setIsActive(false);\n  }\n\n  useEffect(() => {\n    let interval = null;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        setCurrentTime(currentTime => currentTime + 1);\n      }, 1000);\n    } else if (!isActive && currentTime !== 0) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive, currentTime]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \" \", currentTime, \"s \"));\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/Mac/Desktop/GitHub Repo/FWDProject2/src/Timer.js"],"names":["React","useState","useEffect","useRef","Timer","props","currentTime","setCurrentTime","isActive","setIsActive","toggle","reset","interval","setInterval","clearInterval"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAGA,SAASC,KAAT,CAAgBC,KAAhB,EAAsB;AAAA,oBACgBJ,QAAQ,CAAC,CAAD,CADxB;AAAA;AAAA,QACfK,WADe;AAAA,QACFC,cADE;;AAAA,qBAEUN,QAAQ,CAAC,KAAD,CAFlB;AAAA;AAAA,QAEfO,QAFe;AAAA,QAELC,WAFK;;AAKpB,WAASC,MAAT,GAAkB;AAChBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AAED;;AAED,WAASG,KAAT,GAAiB;AACfJ,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,QAAQ,GAAG,IAAf;;AACA,QAAIJ,QAAJ,EAAc;AACZI,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BN,QAAAA,cAAc,CAACD,WAAW,IAAIA,WAAW,GAAG,CAA9B,CAAd;AACD,OAFqB,EAEnB,IAFmB,CAAtB;AAGD,KAJD,MAIO,IAAI,CAACE,QAAD,IAAaF,WAAW,KAAK,CAAjC,EAAoC;AACzCQ,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD;;AACD,WAAO,MAAME,aAAa,CAACF,QAAD,CAA1B;AACD,GAVQ,EAUN,CAACJ,QAAD,EAAWF,WAAX,CAVM,CAAT;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOA,WAAP,OADF,CADF;AAOD;;AAED,eAAeF,KAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n\nfunction Timer (props){\nconst [currentTime, setCurrentTime] = useState(0);\nconst [isActive, setIsActive] = useState(false);\n\n\n  function toggle() {\n    setIsActive(!isActive);\n\n  }\n\n  function reset() {\n    setCurrentTime(0);\n    setIsActive(false);\n  }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setCurrentTime(currentTime => currentTime + 1);\n      }, 1000);\n    } else if (!isActive && currentTime !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, currentTime]);\n\n \n\n  return (\n    <div>\n      <div> {currentTime}s </div>\n    </div>\n  )\n\t\n\n}\n\nexport default Timer; \n\n\n"]},"metadata":{},"sourceType":"module"}